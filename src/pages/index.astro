---
import Layout from "@layouts/Layout.astro";

type NavLink = { href: string; label: string };
type FocusArea = { title: string; description: string };
type ProjectHighlight = {
  title: string;
  description: string;
  stack: string[];
  linkLabel: string;
  link: string;
};
type WritingEntry = { title: string; description: string; date: string; link: string };
type QuickStat = { label: string; value: string };

const navLinks: NavLink[] = [
  { href: '#hero', label: 'Home' },
  { href: '#about', label: 'About' },
  { href: '#focus', label: 'Focus' },
  { href: '#projects', label: 'Projects' },
  { href: '#writing', label: 'Writing' },
  { href: '#contact', label: 'Contact' },
];

const focusAreas: FocusArea[] = [
  {
    title: 'Interface Craft',
    description: 'Designing immersive, responsive web experiences with thoughtful motion and delightful micro-interactions.',
  },
  {
    title: 'Product Systems',
    description: 'Building scalable component systems, documentation, and tooling that empower fast-moving teams.',
  },
  {
    title: 'Knowledge Sharing',
    description: 'Writing deep-dives, tutorials, and changelogs to demystify modern web development and creative coding.',
  },
];

const projectHighlights: ProjectHighlight[] = [
  {
    title: 'Nebula Studio',
    description: 'A modular design system powering a multi-brand SaaS platform with adaptive theming and accessibility baked-in.',
    stack: ['Astro', 'React', 'Tailwind', 'Storybook'],
    linkLabel: 'Read the story',
    link: '#',
  },
  {
    title: 'Orbit Journal',
    description: 'Personal knowledge garden that turns Markdown notes into a graph-based exploration interface.',
    stack: ['Astro', 'D3.js', 'Content Collections'],
    linkLabel: 'View prototype',
    link: '#',
  },
  {
    title: 'Pulse Dashboard',
    description: 'Realtime status board for engineering teams with live incident updates, alerting, and automated post-mortems.',
    stack: ['Astro', 'SolidJS', 'Supabase'],
    linkLabel: 'Case study',
    link: '#',
  },
];

const writingList: WritingEntry[] = [
  {
    title: 'Building a Creative Playground with Astro Islands',
    description: 'How I combine Astro server islands with interactive shaders to tell product stories.',
    date: 'Jan 12 - 7 min read',
    link: '#',
  },
  {
    title: 'Design Tokens in the Real World',
    description: 'Lessons learned shipping cross-platform design systems and keeping designers + engineers aligned.',
    date: 'Dec 28 - 6 min read',
    link: '#',
  },
  {
    title: 'Curating a Personal Knowledge Base',
    description: 'Strategies for staying curious, building better notes, and turning research into shareable insights.',
    date: 'Dec 10 - 8 min read',
    link: '#',
  },
];

const quickStats: QuickStat[] = [
  { label: 'Years in build mode', value: '6+' },
  { label: 'Products shipped', value: '12' },
  { label: 'Articles published', value: '38' },
];

const footerNote = `Copyright ${new Date().getFullYear()} Jarvis Hub. Built with Astro.`;
---

<Layout
  title="Jarvis Hub - Creative Developer"
  description="Creative developer crafting immersive interfaces, thoughtful systems, and long-form notes on building for the web."
  navLinks={navLinks}
  footerNote={footerNote}
>
  <section id="hero" class="hero">
    <div class="hero__badge">Creative developer / Design systems / Learning in public</div>
    <div class="hero__content">
      <div class="hero__summary">
        <h1>Hi, I'm Jarvis - I build purposeful digital experiences.</h1>
        <p>
          I help teams shape ambitious ideas into playful, performant interfaces.
          Currently exploring the intersection of design systems, creative coding, and thoughtful storytelling.
        </p>
        <div class="hero__actions">
          <a class="action action--primary" href="#projects">Explore my work</a>
          <a class="action action--ghost" href="#writing">Read my writing</a>
        </div>
        <div class="hero__stats">
          {quickStats.map(({ label, value }) => (
            <div class="stat">
              <span class="stat__value">{value}</span>
              <span class="stat__label">{label}</span>
            </div>
          ))}
        </div>
      </div>
      <div class="hero__visual">
        <div class="orbit-card">
          <span class="orbit-card__tag">Now</span>
          <h2>Designing experiences that feel human.</h2>
          <p>
            I dive deep into user journeys, take notes in public, and prototype wildly before shipping deliberate, polished work.
          </p>
          <ul>
            <li>Spotlighting emerging tools & workflows</li>
            <li>Documenting everything in the open</li>
            <li>Pairing code, visuals, and narrative</li>
          </ul>
        </div>
        <div class="hero__gradient" aria-hidden="true"></div>
      </div>
    </div>
  </section>

  <section id="about" class="section section--about">
    <div class="section__label">About</div>
    <div class="about__content">
      <h2>Turning ideas into expressive, maintainable products.</h2>
      <p>
        I believe the best digital experiences emerge when craft meets systems thinking.
        From early research to production delivery, I work closely with teams to align vision,
        prototype with intent, and ship with confidence.
      </p>
      <p>
        Off the clock, you'll find me exploring creative coding, collecting typography inspiration,
        and documenting the lessons I learn along the way.
      </p>
    </div>
  </section>

  <section id="focus" class="section">
    <div class="section__label">Focus</div>
    <h2 class="section__title">What I'm focused on right now</h2>
    <div class="card-grid">
      {focusAreas.map(({ title, description }) => (
        <article class="card card--focus">
          <h3>{title}</h3>
          <p>{description}</p>
        </article>
      ))}
    </div>
  </section>

  <section id="projects" class="section">
    <div class="section__label">Projects</div>
    <div class="section__header">
      <h2 class="section__title">Selected work</h2>
      <a class="section__link" href="#contact">Discuss a collaboration</a>
    </div>
    <div class="card-grid card-grid--projects">
      {projectHighlights.map(({ title, description, stack, link, linkLabel }) => (
        <article class="card card--project">
          <div class="card__header">
            <h3>{title}</h3>
            <a class="card__link" href={link}>{linkLabel}</a>
          </div>
          <p>{description}</p>
          <div class="card__stack">
            {stack.map((item) => (
              <span>{item}</span>
            ))}
          </div>
        </article>
      ))}
    </div>
  </section>

  <section id="writing" class="section">
    <div class="section__label">Writing</div>
    <div class="section__header">
      <h2 class="section__title">Latest notes & essays</h2>
      <a class="section__link" href="#blog">Browse the archive</a>
    </div>
    <div class="writing-list">
      {writingList.map(({ title, description, date, link }) => (
        <article class="writing-card">
          <div>
            <h3>{title}</h3>
            <p>{description}</p>
          </div>
          <div class="writing-card__meta">
            <span>{date}</span>
            <a href={link} class="writing-card__cta">Read</a>
          </div>
        </article>
      ))}
    </div>
  </section>

  <section id="contact" class="section section--contact">
    <div class="contact-card">
      <span class="contact-card__eyebrow">Let's build something meaningful</span>
      <h2>Have an idea, a problem to solve, or a story worth telling?</h2>
      <p>
        I partner with teams on digital products, content platforms, and creative experiments.
        Share a few lines about what you're building and I'll get back within two days.
      </p>
      <div class="contact-card__actions">
        <a class="action action--primary" href="mailto:hello@jarvishub.com">hello@jarvishub.com</a>
        <a class="action action--ghost" href="https://cal.com" target="_blank" rel="noreferrer">Book a call</a>
      </div>
    </div>
  </section>
</Layout>

<style>
  .hero {
    display: flex;
    flex-direction: column;
    gap: 32px;
  }

  .hero__badge {
    align-self: flex-start;
    padding: 10px 18px;
    border-radius: 999px;
    background: rgba(99, 102, 241, 0.12);
    color: rgba(199, 210, 254, 0.95);
    font-size: 0.85rem;
    font-weight: 600;
    letter-spacing: 0.02em;
  }

  .hero__content {
    display: grid;
    grid-template-columns: minmax(0, 1.1fr) minmax(0, 0.9fr);
    gap: 36px;
    align-items: stretch;
  }

  .hero__summary h1 {
    font-family: 'Manrope', 'Inter', sans-serif;
    font-size: clamp(2.6rem, 4vw, 3.4rem);
    line-height: 1.1;
    margin: 0 0 18px;
  }

  .hero__summary p {
    color: var(--text-secondary);
    font-size: 1.05rem;
    line-height: 1.7;
    margin: 0 0 24px;
    max-width: 560px;
  }

  .hero__actions {
    display: flex;
    gap: 16px;
    flex-wrap: wrap;
    margin-bottom: 32px;
  }

  .action {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 12px 22px;
    border-radius: var(--radius-sm);
    font-weight: 600;
    text-decoration: none;
    transition:
      transform 0.2s ease,
      box-shadow 0.2s ease,
      border-color 0.2s ease,
      background 0.2s ease;
    border: 1px solid transparent;
  }

  .action--primary {
    background: linear-gradient(135deg, var(--accent), var(--accent-strong));
    color: white;
    box-shadow: 0 18px 38px rgba(99, 102, 241, 0.35);
  }

  .action--primary:hover {
    transform: translateY(-1px);
    box-shadow: 0 24px 48px rgba(99, 102, 241, 0.45);
  }

  .action--ghost {
    background: rgba(255, 255, 255, 0.05);
    border-color: rgba(255, 255, 255, 0.08);
    color: var(--text-secondary);
  }

  .action--ghost:hover {
    border-color: rgba(255, 255, 255, 0.18);
    color: var(--text-primary);
    background: rgba(255, 255, 255, 0.08);
  }

  .hero__stats {
    display: grid;
    grid-template-columns: repeat(3, minmax(0, 1fr));
    gap: 16px;
    padding: 18px;
    border-radius: var(--radius-md);
    border: 1px solid var(--border-subtle);
    background: rgba(10, 12, 29, 0.55);
    max-width: 540px;
  }

  .stat {
    display: flex;
    flex-direction: column;
    gap: 4px;
  }

  .stat__value {
    font-size: 1.6rem;
    font-weight: 600;
    color: white;
  }

  .stat__label {
    font-size: 0.85rem;
    color: var(--text-secondary);
  }

  .hero__visual {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .hero__gradient {
    position: absolute;
    inset: 12%;
    border-radius: var(--radius-lg);
    background: radial-gradient(circle at 30% 20%, rgba(110, 126, 255, 0.45), rgba(85, 101, 207, 0.08));
    filter: blur(12px);
    z-index: -1;
  }

  .orbit-card {
    padding: 32px;
    border-radius: var(--radius-lg);
    background: linear-gradient(160deg, rgba(15, 23, 42, 0.95), rgba(15, 23, 42, 0.85));
    border: 1px solid rgba(147, 197, 253, 0.18);
    box-shadow: var(--shadow-soft);
    display: flex;
    flex-direction: column;
    gap: 18px;
    max-width: 380px;
  }

  .orbit-card__tag {
    align-self: flex-start;
    padding: 6px 14px;
    border-radius: 999px;
    background: rgba(99, 102, 241, 0.2);
    color: rgba(199, 210, 254, 0.95);
    font-weight: 600;
    font-size: 0.8rem;
    letter-spacing: 0.08em;
    text-transform: uppercase;
  }

  .orbit-card h2 {
    margin: 0;
    font-size: 1.5rem;
    font-weight: 600;
    line-height: 1.3;
  }

  .orbit-card p {
    margin: 0;
    color: var(--text-secondary);
    line-height: 1.6;
  }

  .orbit-card ul {
    margin: 12px 0 0;
    padding: 0 0 0 20px;
    color: rgba(199, 210, 254, 0.85);
    line-height: 1.6;
  }

  .section {
    margin-top: 120px;
    display: flex;
    flex-direction: column;
    gap: 22px;
  }

  .section__label {
    font-size: 0.8rem;
    letter-spacing: 0.3em;
    text-transform: uppercase;
    color: rgba(148, 163, 184, 0.7);
    font-weight: 600;
  }

  .section__title {
    font-family: 'Manrope', 'Inter', sans-serif;
    font-size: clamp(2rem, 3vw, 2.6rem);
    margin: 0;
  }

  .section__header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 18px;
    flex-wrap: wrap;
  }

  .section__link {
    color: var(--text-secondary);
    text-decoration: none;
    font-weight: 500;
    border-bottom: 1px solid transparent;
    transition:
      color 0.2s ease,
      border-color 0.2s ease;
  }

  .section__link:hover {
    color: var(--text-primary);
    border-color: var(--text-primary);
  }

  .card-grid {
    display: grid;
    grid-template-columns: repeat(3, minmax(0, 1fr));
    gap: 24px;
  }

  .card {
    padding: 28px;
    border-radius: var(--radius-md);
    background: rgba(11, 16, 32, 0.65);
    border: 1px solid rgba(148, 163, 184, 0.18);
    display: flex;
    flex-direction: column;
    gap: 14px;
    box-shadow: 0 14px 36px rgba(2, 4, 10, 0.45);
    transition:
      transform 0.25s ease,
      border-color 0.25s ease,
      box-shadow 0.25s ease;
  }

  .card:hover {
    transform: translateY(-6px);
    border-color: rgba(148, 163, 184, 0.3);
    box-shadow: 0 24px 48px rgba(2, 4, 10, 0.55);
  }

  .card h3 {
    margin: 0;
    font-size: 1.3rem;
  }

  .card p {
    margin: 0;
    color: var(--text-secondary);
    line-height: 1.65;
  }

  .card__header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 12px;
  }

  .card__link {
    font-size: 0.9rem;
    color: rgba(199, 210, 254, 0.9);
    text-decoration: none;
    border-bottom: 1px solid transparent;
  }

  .card__link:hover {
    border-color: rgba(199, 210, 254, 0.9);
  }

  .card__stack {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
  }

  .card__stack span {
    padding: 6px 12px;
    border-radius: 999px;
    background: rgba(255, 255, 255, 0.05);
    color: rgba(199, 210, 254, 0.9);
    font-size: 0.75rem;
    font-weight: 600;
    letter-spacing: 0.04em;
  }

  .card--focus {
    background: rgba(17, 24, 48, 0.6);
  }

  .card-grid--projects {
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  }

  .writing-list {
    display: grid;
    grid-template-columns: 1fr;
    gap: 18px;
  }

  .writing-card {
    padding: 24px 26px;
    border-radius: var(--radius-md);
    border: 1px solid rgba(148, 163, 184, 0.18);
    background: rgba(9, 12, 26, 0.6);
    display: flex;
    flex-direction: column;
    gap: 18px;
    transition:
      transform 0.25s ease,
      border-color 0.25s ease,
      box-shadow 0.25s ease;
  }

  .writing-card:hover {
    transform: translateY(-4px);
    border-color: rgba(148, 163, 184, 0.3);
    box-shadow: 0 18px 42px rgba(2, 4, 10, 0.5);
  }

  .writing-card h3 {
    margin: 0 0 8px;
    font-size: 1.25rem;
  }

  .writing-card p {
    margin: 0;
    color: var(--text-secondary);
    line-height: 1.65;
  }

  .writing-card__meta {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 16px;
    color: rgba(148, 163, 184, 0.85);
    font-size: 0.9rem;
  }

  .writing-card__cta {
    padding: 8px 14px;
    border-radius: 999px;
    background: rgba(255, 255, 255, 0.06);
    text-decoration: none;
    color: rgba(199, 210, 254, 0.95);
    border: 1px solid transparent;
    transition:
      background 0.2s ease,
      border-color 0.2s ease;
  }

  .writing-card__cta:hover {
    background: rgba(255, 255, 255, 0.1);
    border-color: rgba(199, 210, 254, 0.4);
  }

  .section--contact {
    margin-bottom: 40px;
  }

  .contact-card {
    padding: 48px;
    border-radius: var(--radius-lg);
    background: linear-gradient(135deg, rgba(17, 24, 47, 0.95), rgba(26, 20, 52, 0.95));
    border: 1px solid rgba(148, 163, 184, 0.22);
    box-shadow: 0 28px 60px rgba(5, 7, 18, 0.65);
    display: flex;
    flex-direction: column;
    gap: 20px;
  }

  .contact-card__eyebrow {
    font-size: 0.85rem;
    letter-spacing: 0.16em;
    text-transform: uppercase;
    color: rgba(199, 210, 254, 0.8);
    font-weight: 600;
  }

  .contact-card h2 {
    margin: 0;
    font-size: clamp(2rem, 3vw, 2.6rem);
  }

  .contact-card p {
    margin: 0;
    color: var(--text-secondary);
    line-height: 1.7;
    max-width: 620px;
  }

  .contact-card__actions {
    display: flex;
    gap: 16px;
    flex-wrap: wrap;
    margin-top: 12px;
  }

  .section--about {
    gap: 18px;
  }

  .about__content {
    display: flex;
    flex-direction: column;
    gap: 14px;
    max-width: 720px;
  }

  .about__content h2 {
    margin: 0;
    font-size: clamp(2rem, 3vw, 2.6rem);
  }

  .about__content p {
    margin: 0;
    color: var(--text-secondary);
    line-height: 1.7;
  }

  @media (max-width: 960px) {
    .hero__content {
      grid-template-columns: 1fr;
    }

    .hero__visual {
      order: -1;
      justify-content: flex-start;
    }

    .orbit-card {
      max-width: 100%;
    }

    .hero__stats {
      grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
    }

    .card-grid {
      grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
    }
  }

  @media (max-width: 640px) {
    .hero {
      gap: 24px;
    }

    .hero__badge {
      font-size: 0.75rem;
      padding: 8px 14px;
    }

    .hero__actions {
      flex-direction: column;
      align-items: stretch;
    }

    .section {
      margin-top: 90px;
    }

    .card,
    .writing-card {
      padding: 22px;
    }

    .contact-card {
      padding: 32px;
    }
  }
</style>
